# Copyright (c) 2024 Intel Corporation.
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.config.edge_video_analytics_microservice.name }}
  namespace: {{ $.Values.namespace }}
spec:
  type: NodePort
  selector:
    app: edge-video-analytics-microservice
  ports:
  - name: "rest-api"
    port: {{ $.Values.config.edge_video_analytics_microservice.int.rest_api_port }}
    targetPort: {{ $.Values.config.edge_video_analytics_microservice.int.rest_api_port }}
    nodePort: {{ $.Values.config.edge_video_analytics_microservice.ext.rest_api_port }}
  - name: "rtsp-output-streaming"
    port: {{ $.Values.config.edge_video_analytics_microservice.int.rtsp_output_port }}
    targetPort: {{ $.Values.config.edge_video_analytics_microservice.int.rtsp_output_port }}
    nodePort: {{ $.Values.config.edge_video_analytics_microservice.ext.rtsp_output_port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: edge-video-analytics-microservice
  name: deployment-{{ $.Values.config.edge_video_analytics_microservice.name }}
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge-video-analytics-microservice
  template:
    metadata:
      labels:
        app: edge-video-analytics-microservice
    spec:
      securityContext:
        supplementalGroups: [109,110]
      {{- if and $.Values.DOCKER_USERNAME $.Values.DOCKER_PASSWORD }}
      imagePullSecrets:
      - name: registryauth
      {{- end }}
      # hostNetwork: true
      containers:
      - name: {{ $.Values.config.edge_video_analytics_microservice.name }}
        image: {{ $.Values.DOCKER_REGISTRY }}intel/edge-video-analytics-microservice:2.4.0
        imagePullPolicy: {{ $.Values.imagePullPolicy }}
        securityContext:
          privileged: true  # Required for direct access to /dev
        volumeMounts:
        - mountPath: /var/cache/pipeline_root
          name: vol-evam-pipeline-root-tmpfs0
        - name: dev
          mountPath: /dev
        - name: dev-shm
          mountPath: /dev/shm
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        - name: run-udev
          mountPath: /run/udev
        - name: {{ $.Values.volumes.pipelines.name }}
          mountPath: {{ $.Values.volumes.pipelines.location }}
        - name: {{ $.Values.volumes.models.name }}
          mountPath: {{ $.Values.volumes.models.location }}
        - name: evam-input
          mountPath: /home/pipeline-server/config.json
          subPath: config.json
        - name: model-registry-temp-models
          mountPath: /home/pipeline-server/mr_models
        env:
        - name: AppName
          value: 'EdgeVideoAnalyticsMicroservice'
        - name: ENABLE_WEBRTC
          value: "{{ $.Values.env.ENABLE_WEBRTC }}"
        - name: ENABLE_RTSP
          value: "{{ $.Values.env.ENABLE_RTSP }}"
        - name: WEBRTC_SIGNALING_SERVER
          value: "http://{{ $.Values.env.HOST_IP }}:{{ $.Values.config.mediamtx.ext.mediamtx_port }}"
        - name: RUN_MODE
          value: "EVA"
        - name: SERVICE_NAME
          value: "evam"
        - name: REST_SERVER_PORT
          value: "8080"
        - name: no_proxy
          value: localhost,127.0.0.1,.intel.com,{{ $.Values.env.RTSP_CAMERA_IP }},{{ $.Values.env.HOST_IP }},otel-collector
        - name: NO_PROXY
          value: localhost,127.0.0.1,.intel.com,{{ $.Values.env.RTSP_CAMERA_IP }},{{ $.Values.env.HOST_IP }},otel-collector
        - name: http_proxy
          value: {{ $.Values.env.http_proxy }}
        - name: https_proxy
          value: {{ $.Values.env.https_proxy }}
        - name: S3_STORAGE_HOST
          value: "{{ $.Values.env.HOST_IP }}"
        - name: S3_STORAGE_PORT
          value: "{{ $.Values.env.S3_STORAGE_PORT }}"
        - name: S3_STORAGE_USER
          value: "{{ $.Values.env.MINIO_ACCESS_KEY }}"
        - name: S3_STORAGE_PASS
          value: "{{ $.Values.env.MINIO_SECRET_KEY }}"
        - name: ENABLE_OPEN_TELEMETRY
          value: "{{ $.Values.env.ENABLE_OPEN_TELEMETRY }}"
        - name: OTEL_COLLECTOR_HOST
          value: {{ $.Values.env.HOST_IP }}
        - name: OTEL_COLLECTOR_PORT
          value: "{{ $.Values.env.OTEL_COLLECTOR_PORT }}"
        - name: OTEL_EXPORT_INTERVAL_MILLIS
          value: "{{ $.Values.env.OTEL_EXPORT_INTERVAL_MILLIS }}"
      initContainers:
      - name: wait-for-model-registry
        image: busybox
        command: ['sh', '-c', 'wget --spider --quiet --tries=5 --timeout=3 http://model-registry:8111/docs']
      volumes:
      - name: vol-evam-pipeline-root-tmpfs0
        emptyDir: {}
      - name: dev
        hostPath:
          path: /dev
      - name: dev-shm
        hostPath:
          path: /dev/shm
      - name: tmp
        hostPath:
          path: /tmp
      - name: var-tmp
        hostPath:
          path: /var/tmp
      - name: run-udev
        hostPath:
          path: /run/udev
      - name: model-registry-temp-models
        emptyDir: {}
      - name: {{ $.Values.volumes.models.name }}
        hostPath:
          path: {{ $.Values.volumes.models.hostpath }}
          #type: DirectoryOrCreate
      - name: {{ $.Values.volumes.pipelines.name }}
        hostPath:
          path: {{ $.Values.volumes.pipelines.hostpath }}
          #type: DirectoryOrCreate
      - name: evam-input
        configMap:
          name: evam-config-input