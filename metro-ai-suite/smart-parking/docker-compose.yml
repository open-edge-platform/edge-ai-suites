version: "3"

services:
  broker:
    image: eclipse-mosquitto
    hostname: mqtt
    container_name: mqtt_broker
    volumes:
      - ./mosquitto/config:/mosquitto/config:ro
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - app_network

  edge_video_analytics_microservice:
    image: intel/edge-video-analytics-microservice:2.3.0
    container_name: edge_video_analytics_microservice
    entrypoint: [ "./run.sh" ]
    ports:
      - '8080:8080'
    environment:
      - ENABLE_WEBRTC=true
      - no_proxy=${no_proxy},${RTSP_CAMERA_IP}
      - WEBRTC_SIGNALING_SERVER=ws://localhost:8443
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - RUN_MODE=EVA
      - DETECTION_DEVICE=CPU
      - EMIT_SOURCE_AND_DESTINATION=true
      - REST_SERVER_PORT=8080
    volumes:
      - vol_evam_pipeline_root:/var/cache/pipeline_root:uid=1999,gid=1999
      - "./dlsps/models:/home/pipeline-server/models"
      - "./dlsps/videos:/home/pipeline-server/videos"
      - "./dlsps/pipelines:/home/pipeline-server/pipelines"
      - "./dlsps/config.json:/home/pipeline-server/config.json"
      - "/run/udev:/run/udev:ro"
      - "/dev:/dev"
      - "/tmp:/tmp"
    group_add:
      - "109"
      - "110"
      - "992"
    device_cgroup_rules:
      - 'c 189:* rmw'
      - 'c 209:* rmw'
      - 'a 189:* rwm'
    devices:
      - "/dev:/dev"
    network_mode: host
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
    tmpfs:
      - /tmp/results.json:uid=1999,gid=1999

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - "./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/main.yml"
      - "./grafana/dashboards:/var/lib/grafana/dashboards"
      - "./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml"
      - "./grafana/grafana.ini:/etc/grafana/grafana.ini"
      - "./grafana/test_plugin:/var/lib/grafana/plugins/intel-custom-panel"
    networks:
      - app_network
    environment:
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource,ryantxu-ajax-panel,grafana-mqtt-datasource
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=intel-custom-panel
    env_file:
      - .env

  multimodal-data-visualization-streaming:
    image: intel/multimodal-data-visualization-streaming:5.0.0
    container_name: multimodal-data-visualization-streaming
    ipc: "none"
    tmpfs:
      - /etc/nginx/sites-enabled:uid=1999,gid=1999
      - /usr/share/nginx:uid=1999,gid=1999
      - /var/log/nginx:uid=1999,gid=1999
      - /var/cache/nginx:uid=1999,gid=1999
      - /var/lib/nginx:uid=1999,gid=1999
      - /run:uid=1999,gid=1999
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
      AppName: "MultiModalVisualizationStreaming"
      LSHOST: host.docker.internal
      LSFEATURE_NAME: "MultiModalVisStreaming"
      RUNTIME_LICENSE_CHECK_FREQ_SECS: 3600
      APPLICATION_RESTART_FREQ_SECS: 60
    volumes:
      - ./webrtc-client/styles.css:/app/eva_ui_default/www/styles.css
      - ./webrtc-client/index.html:/app/eva_ui_default/www/index.html
      - ./webrtc-client/main.d4287178.css:/app/eva/build/static/css/main.d4287178.css
      - ./webrtc-client/main.d4287178.css.map:/app/eva/build/static/css/main.d4287178.css.map
      - ./webrtc-client/main.fb2b29be.js:/app/eva/build/static/js/main.fb2b29be.js
      - ./webrtc-client/main.fb2b29be.js.map:/app/eva/build/static/js/main.fb2b29be.js.map
    networks:
      - app_network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
    ports:
      - "8082:8082"
      - "8083:8083"

  webrtc-signaling-server:
    image: intel/simple-signaling-server:4.0.3
    container_name: webrtc-signaling-server
    read_only: true
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
    ipc: "none"
    networks:
      - app_network
    ports:
      - "8443:8443"

  node-red:
    image: nodered/node-red
    container_name: node-red
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
    volumes:
      - "./node-red:/data"
      - "./dlsps/videos:/data/public/videos"
    ipc: "none"
    entrypoint: [ "/bin/bash", "-c", "/data/install_package.sh && /usr/src/node-red/entrypoint.sh" ]
    user: root
    networks:
      - app_network
    ports:
      - "1880:1880"

networks:
  app_network:
    driver: "bridge"

volumes:
  postgres_data: {}
  vol_evam_pipeline_root:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
